x-restart-always: &restart-always
  restart: always

services:
  phpfpm:
    extends:
      file: compose.common.yaml
      service: php
    <<: [*restart-always]
    logging:
      options:
        max-size: "25mb"
        max-file: "10"

  nginx:
    build:
      context: .docker/nginx
      dockerfile: Dockerfile
      args:
        NGINX_IMAGE_VERSION: ${NGINX_IMAGE_VERSION}
    security_opt:
      - no-new-privileges:true
    <<: [*restart-always]
    ports:
      - "8081:80"
    volumes:
      - .:/app
    labels:
      traefik.enable: true
      traefik.docker.network: proxy
      traefik.http.routers.webapp-nginx.priority: 100
      traefik.http.routers.webapp-nginx.tls: true
      traefik.http.routers.webapp-nginx.entrypoints: websecure
      traefik.http.routers.webapp-nginx.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.webapp-nginx.service: webapp-nginx
      traefik.http.services.webapp-nginx.loadbalancer.server.port: 80
    networks:
      - webapp
      - proxy

  mysql:
    build:
      context: .docker/mysql
      dockerfile: Dockerfile
      args:
        MYSQL_IMAGE_VERSION: ${MYSQL_IMAGE_VERSION}
    cap_add:
      - SYS_NICE
    security_opt:
      - no-new-privileges:true
    logging:
      options:
        max-size: "50m"
        max-file: "5"
    ports:
      - "3307:3306"
    <<: [*restart-always]
    environment:
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - mysql_log:/var/log/mysql
      - ./.docker/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - webapp

  node:
    image: timbru31/node-alpine-git:${NODE_IMAGE_VERSION}
    working_dir: /app
    security_opt:
      - no-new-privileges:true
    profiles:
      - dev
    restart: "no"
    volumes:
      - .:/app
    depends_on:
      - phpfpm

  meilisearch:
    image: getmeili/meilisearch:${MEILISEARCH_IMAGE_VERSION:-v1.12}
    <<: [ *restart-always ]
    environment:
      MEILI_MASTER_KEY: ${MEILISEARCH_MASTER_KEY}
      MEILI_LOG_LEVEL: ${MEILISEARCH_LOG_LEVEL:-'ERROR'}
      MEILI_NO_ANALYTICS: true
    logging:
      options:
        max-size: "25mb"
        max-file: "5"
    volumes:
      - meili_data:/meili_data
    networks:
      - webapp

  wait:
    image: waisbrot/wait
    environment:
      TARGETS: mysql:3306 nginx:80
      TIMEOUT: 300
    networks:
      - webapp

volumes:
  mysql_data:
    driver: local
  mysql_log:
    driver: local
  apache_log:
    driver: local
  meili_data:
    driver: local

networks:
  webapp:
    driver: bridge
  proxy:
    external: true
